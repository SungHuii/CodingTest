# 문제 : 분해합
# 어떤 자연수 N이 있을 때, 그 자연수 N의 분해합은 N과 N을 이루는 각 자리수의 합을 의미한다.
# 어떤 자연수 M의 분해합이 N인 경우, M을 N의 생성자라 한다. 
# 예를 들어, 245의 분해합은 256(=245+2+4+5)이 된다. 따라서 245는 256의 생성자가 된다. 
# 물론, 어떤 자연수의 경우에는 생성자가 없을 수도 있다. 반대로, 생성자가 여러 개인 자연수도 있을 수 있다.

# 자연수 N이 주어졌을 때, N의 가장 작은 생성자를 구해내는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 자연수 N(1 ≤ N ≤ 1,000,000)이 주어진다.

# 출력
# 첫째 줄에 답을 출력한다. 생성자가 없는 경우에는 0을 출력한다.

# 예제 입출력
# 216 -> 198

# 풀이
n = int(input())

strn = str(n)
listn = list(strn)
intarr = list(map(int, listn))
total = 0
for i in intarr:
    total += i
construc = n + total
print(construc)

# 해설
n = int(input().strip())   # N 입력 받기

# 생성자가 될 수 있는 최소 범위를 정한다.
# 이유: 어떤 수 M의 자리수 합은 최대 9 * (자릿수)밖에 안 되므로,
# M은 최소한 N - 9*len(str(N)) 이상이어야 한다.
# 예) N=216, 자릿수=3 → 최대 자리수합=27 → 생성자는 최소 189부터 시작.
start = max(1, n - 9 * len(str(n)))

answer = 0   # 생성자를 저장할 변수 (없으면 0 유지)

# start부터 N-1까지 모든 수를 확인한다.
for m in range(start, n):
    # m의 분해합 = m + (m의 각 자리수 합)
    if m + sum(map(int, str(m))) == n:
        answer = m   # 생성자를 찾았다!
        break        # 가장 작은 생성자를 찾았으므로 종료

# 생성자가 없는 경우 0, 있으면 해당 생성자 출력
print(answer)
